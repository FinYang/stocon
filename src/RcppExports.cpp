// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// optim_for_each_cpp
NumericVector optim_for_each_cpp(NumericVector x, Function f, int max_iteration, List paralist);
RcppExport SEXP _stocon_optim_for_each_cpp(SEXP xSEXP, SEXP fSEXP, SEXP max_iterationSEXP, SEXP paralistSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    Rcpp::traits::input_parameter< int >::type max_iteration(max_iterationSEXP);
    Rcpp::traits::input_parameter< List >::type paralist(paralistSEXP);
    rcpp_result_gen = Rcpp::wrap(optim_for_each_cpp(x, f, max_iteration, paralist));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_stocon_optim_for_each_cpp", (DL_FUNC) &_stocon_optim_for_each_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_stocon(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
